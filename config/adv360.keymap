
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp EQUAL    &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3          &kp NUMBER_4  &kp NUMBER_5                    &none                                                                    &mo 2  &kp NUMBER_6    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp NUMBER_0         &kp MINUS
        &kp TAB           &kp Q            &kp W         &kp F                 &kp P         &kp B                    &none                                                                    &none         &kp J           &kp L         &kp U         &kp Y        &kp SEMI          &kp BSLH
 &mt DEL ESCAPE           &kp A            &kp R         &kp S                 &kp T         &kp G                    &none  &kp ESCAPE     &none                      &none  &lt 5 ENTER      &none         &kp M           &kp N         &kp E         &kp I           &kp O  &kp SINGLE_QUOTE
          &sl 5           &kp Z            &kp X         &kp C                 &kp D         &kp V                                       &kp HOME                  &kp PG_UP                                 &kp K           &kp H     &kp COMMA       &kp DOT        &kp FSLH             &sl 5
          &mo 1  &kp LEFT_ARROW  &kp RIGHT_ARROW         &sl 6  &kp LEFT_PARENTHESIS                          &kp BACKSPACE       &sl 4   &kp END                  &kp PG_DN        &sl 4  &kp SPACE                &kp LEFT_BRACE         &sl 6  &kp UP_ARROW  &kp DOWN_ARROW             &mo 1
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6             &none                                                   &none  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_NUM {
            bindings = <
  &none   &none         &none         &none         &none   &none                   &none                                                         &none   &none         &none         &none         &none   &none   &none
  &none   &none  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &none                   &none                                                         &none   &none  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9   &none   &none
  &none   &none  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &none                   &none   &none   &none                   &none   &none         &none   &none  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &none   &none
  &none   &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &none                                   &none                   &none                         &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3   &none   &none
  &none   &none         &none         &none         &none                    &kp NUMBER_0   &none   &none                   &none   &none  &kp NUMBER_0                 &none         &none         &none   &none   &none
            >;
        };

        layer_ctrl {
            bindings = <
 &trans     &trans     &trans     &trans     &trans     &trans               &trans                                                      &trans     &trans     &trans     &trans     &trans     &trans  &trans
 &trans  &kp RC(Q)  &kp RC(W)  &kp RC(F)  &kp RC(P)  &kp RC(B)               &trans                                                      &trans  &kp LC(J)  &kp LC(L)  &kp LC(U)  &kp LC(Y)     &trans  &trans
 &trans  &kp RC(A)  &kp RC(R)  &kp RC(S)  &kp RC(T)  &kp RC(G)               &trans      &trans  &trans                  &trans  &trans  &trans  &kp LC(M)  &kp LC(N)  &kp LC(E)  &kp LC(I)  &kp LC(O)  &trans
 &trans  &kp RC(Z)  &kp RC(X)  &kp RC(C)  &kp RC(D)  &kp RC(V)                                   &trans                  &trans                  &kp LC(K)  &kp LC(H)     &trans     &trans     &trans  &trans
 &trans     &trans     &trans     &trans     &trans                       &kp CARET  &kp DOLLAR  &trans                  &trans  &trans  &trans                &trans     &trans     &trans     &trans  &trans
            >;
        };

        layer_shift {
            bindings = <
 &trans  &kp LEFT_BRACKET  &kp NUMBER_2  &kp EQUAL  &kp SEMICOLON  &kp NUMBER_5            &trans                                                  &trans  &kp NUMBER_6  &kp MINUS       &kp STAR      &kp NUMBER_9  &kp NUMBER_0             &trans
 &trans         &kp RS(Q)     &kp RS(W)  &kp RS(F)      &kp RS(P)     &kp RS(B)            &trans                                                  &trans     &kp LS(J)  &kp LS(L)      &kp LS(U)         &kp LS(Y)     &kp COLON             &trans
 &trans         &kp RS(A)     &kp RS(R)  &kp RS(S)      &kp RS(T)     &kp RS(G)            &trans  &trans  &trans                  &trans  &trans  &trans     &kp LS(M)  &kp LS(N)      &kp LS(E)         &kp LS(I)     &kp LS(O)  &kp DOUBLE_QUOTES
 &trans         &kp RS(Z)     &kp RS(X)  &kp RS(C)      &kp RS(D)     &kp RS(V)                            &trans                  &trans                     &kp LS(K)  &kp LS(H)  &kp LESS_THAN  &kp GREATER_THAN  &kp QUESTION             &trans
 &trans            &trans        &trans     &trans         &trans                          &trans  &trans  &trans                  &trans  &trans  &trans                   &trans         &trans            &trans        &trans             &trans
            >;
        };

        layer_super {
            bindings = <
 &trans            &trans            &trans            &trans            &trans     &trans                      &trans                                                                   &trans     &trans         &trans         &trans         &trans            &trans  &trans
 &trans         &kp RG(Q)         &kp RG(W)         &kp RG(F)         &kp RG(E)  &kp RG(B)                      &trans                                                                   &trans  &kp LG(J)      &kp LG(L)      &kp LG(U)      &kp LG(Y)            &trans  &trans
 &trans         &kp RG(A)         &kp RG(R)         &kp RG(S)         &kp RG(T)  &kp RG(G)                      &trans     &trans  &trans                  &trans         &trans         &trans  &kp LG(M)      &kp LG(J)      &kp LG(K)      &kp LG(L)      &kp LG(SEMI)  &trans
 &trans  &kp RS(NUMBER_5)  &kp RS(NUMBER_4)  &kp RS(NUMBER_3)  &kp RS(NUMBER_2)  &kp RG(V)                                         &trans                  &trans                                &kp LG(H)  &kp LG(LS(J))  &kp LG(LS(K))  &kp LG(LS(L))  &kp LG(LS(SEMI))  &trans
 &trans            &trans            &trans            &trans            &trans                       &kp RG(NUMBER_1)  &kp RS(D)  &trans                  &trans  &kp LG(LS(Q))  &kp LG(ENTER)                    &trans         &trans         &trans            &trans  &trans
            >;
        };

    };
};
